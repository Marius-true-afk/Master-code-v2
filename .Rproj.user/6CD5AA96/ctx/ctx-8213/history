# Konventerer "data frame" til "sf-objekt" for å behandle geografisk data
density_map_2000 <- st_as_sf(herring_clean_density_2000, coords = c("lon", "lat"), crs = 4326)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
maps_catches_2000_2019 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = st_coordinates(density_map_2000) |>
as.data.frame(),
aes(X, Y),
alpha = 0.7
) +
coord_sf(xlim = c(0, 30), ylim = c(55, 76)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of Individual Herring catched from 2000 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
maps_catches_2000_2019
#| message: false
#| warning: false
#Checking min/max coordinates to look at all potensial datapoints
#summary(st_coordinates(aquaculture))
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Leser CSV filen
herring_data <- read_csv("HerringData.csv")
# Sørger for at lon og lat blir oppfattet som tall framfor tegn
herring_clean <- herring_data |>
mutate(
lon = as.numeric(lon),
lat = as.numeric(lat)
) |>
# Fjerner rader som mangler koordinater. !is.na() returnerer TRUE for gyldige rader
filter(!is.na(lon), !is.na(lat)) |>
# Passer på at unike rader er paret
distinct(lon, lat, .keep_all = TRUE)
# Konventerer "data frame" til "sf-objekt" for å behandle geografisk data
aquaculture <- st_as_sf(herring_clean, coords = c("lon", "lat"), crs = 4326)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
kart_5 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = st_coordinates(aquaculture) |>
as.data.frame(),
aes(X, Y),
alpha = 0.7
) +
coord_sf(xlim = c(-21, 50), ylim = c(5, 81)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of unique sampling points from 1935 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
kart_5
#install.packages("patchwork")
library(patchwork)
maps_unique_sampling_points <- maps_unique_sampling_points + labs(title = NULL, subtitle = "Unique coords")
maps_catches_1935_2019 <- maps_catches_1935_2019 + labs(title = NULL, subtitle = "Catches 1935 - 2019")
maps_catches_1970_2019 <- maps_catches_1970_2019 + labs(title = NULL, subtitle = "Catches 1970 - 2109")
maps_catches_2000_2019 <- maps_catches_2000_2019 + labs(title = NULL, subtitle = "Catches 2000 - 2019")
(maps_unique_sampling_points | maps_catches_1935_2019) +
plot_annotation(
title = "Herring Density Maps",
subtitle = "Heatmaps displaying distrubution of Herring catches from 1935 - 2019 in different timescales",
tag_levels = 'A' # Adds A, B, C… labels to subplots
)
(maps_catches_1970_2019 | maps_catches_2000_2019) +
plot_annotation(
title = "Herring Density Maps",
subtitle = "Density Maps displaying distrubution of Herring catches from 1935 - 2019 in different timescales",
tag_levels = '1'
)
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Leser CSV filen
herring_data_raw_density_2000 <- read_csv("HerringData.csv")
# Sørger for at lon og lat blir oppfattet som tall framfor tegn
herring_clean_density_2000 <- herring_data_raw_density_2000 |>
mutate(
lon = as.numeric(lon),
lat = as.numeric(lat)
) |>
# Fjerner rader uten koordinater. !is.na() returnerer TRUE for gyldige rader
filter(!is.na(lon), !is.na(lat)) |>
filter(year >= 2000)
# Konventerer "data frame" til "sf-objekt" for å behandle geografisk data
density_map_2000 <- st_as_sf(herring_clean_density_2000, coords = c("lon", "lat"), crs = 4326)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
maps_catches_2000_2019 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = st_coordinates(density_map_2000) |>
as.data.frame(),
aes(X, Y),
alpha = 0.7
) +
coord_sf(xlim = c(0, 35), ylim = c(55, 76)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of Individual Herring catched from 2000 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
maps_catches_2000_2019
#| message: false
#| warning: false
#Checking min/max coordinates to look at all potensial datapoints
#summary(st_coordinates(aquaculture))
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Leser CSV filen
herring_data <- read_csv("HerringData.csv")
# Sørger for at lon og lat blir oppfattet som tall framfor tegn
herring_clean <- herring_data |>
mutate(
lon = as.numeric(lon),
lat = as.numeric(lat)
) |>
# Fjerner rader som mangler koordinater. !is.na() returnerer TRUE for gyldige rader
filter(!is.na(lon), !is.na(lat)) |>
# Passer på at unike rader er paret
distinct(lon, lat, .keep_all = TRUE)
# Konventerer "data frame" til "sf-objekt" for å behandle geografisk data
aquaculture_1 <- st_as_sf(herring_clean, coords = c("lon", "lat"), crs = 4326)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
kart_5 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = st_coordinates(aquaculture_1) |>
as.data.frame(),
aes(X, Y),
alpha = 0.7
) +
coord_sf(xlim = c(-21, 50), ylim = c(5, 81)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of unique sampling points from 1935 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
kart_5
View(catch_1935_2019)
View(Sum_catches_1930_2019)
#| message: false
#| warning: false
#Checking min/max coordinates to look at all potensial datapoints
#summary(st_coordinates(aquaculture))
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Leser CSV filen
herring_data <- read_csv("HerringData.csv")
# Sørger for at lon og lat blir oppfattet som tall framfor tegn
herring_clean <- herring_data |>
mutate(
lon = as.numeric(lon),
lat = as.numeric(lat)
) |>
# Fjerner rader som mangler koordinater. !is.na() returnerer TRUE for gyldige rader
filter(!is.na(lon), !is.na(lat)) |>
# Passer på at unike rader er paret
distinct(lon, lat, .keep_all = TRUE)
# Konventerer "data frame" til "sf-objekt" for å behandle geografisk data
aquaculture_world <- st_as_sf(herring_clean, coords = c("lon", "lat"), crs = 4326)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
maps_unique_sampling_points_world <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = st_coordinates(aquaculture_world) |>
as.data.frame(),
aes(X, Y),
alpha = 0.7
) +
coord_sf(xlim = c(-21, 50), ylim = c(5, 81)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of unique sampling points from 1935 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
maps_unique_sampling_points_world
#install.packages("patchwork")
library(patchwork)
maps_unique_sampling_points <- maps_unique_sampling_points + labs(title = NULL, subtitle = "Unique coords")
maps_catches_1935_2019 <- maps_catches_1935_2019 + labs(title = NULL, subtitle = "Catches 1935-2019")
maps_catches_1970_2019 <- maps_catches_1970_2019 + labs(title = NULL, subtitle = "Catches 1970-2019")
maps_catches_2000_2019 <- maps_catches_2000_2019 + labs(title = NULL, subtitle = "Catches 2000-2019")
(maps_unique_sampling_points | maps_catches_1935_2019) +
plot_annotation(
title = "Herring Density Maps",
subtitle = "Density Maps displaying distrubution of Herring catches from 1935 - 2019 in different timescales",
tag_levels = 'A'
)
(maps_catches_1970_2019 | maps_catches_2000_2019) +
plot_annotation(
title = "Herring Density Maps",
subtitle = "Density Maps displaying distrubution of Herring catches from 1935 - 2019 in different timescales",
tag_levels = '1'
)
#| echo: false
2 * 2
#Used for help creating bar chart: https://www.storybench.org/create-barplot-r/
library(dplyr)
# Leser av CSV filen
herring_bar_raw_data <- read.csv(file = "HerringData.csv")
#names(Herring_bar_graph)
#En tibble 6x2 som viser hvor mange datapunkter per år
herring_bar_clean_data <- herring_bar_raw_data |>
mutate(
year = as.numeric(year),
id = as.numeric(id)
) |>
select(id,year) |>
group_by(year) |>
summarise(total_fish_caught = n())
# --------------------------- BAR GRAPH ---------------------------
#$ Extract or Replace Parts of an Object -- Operators acting on vectors, matrices, arrays and lists to extract or replace parts.
#From max/min total_fish_caught command <- 16518 / 648 individual fish
samples <- herring_bar_clean_data$total_fish_caught
years <- herring_bar_clean_data$years
barplot(samples,                # height of the bar chart
names.arg = year,      # labels for the x-axis
ylim = c(500, 17000),
las = 2,                # labes of Axis Style
cex.names = 0.6,        # Expansion factor of labels
col = "steelblue",
main = "Number of Herring Data Points per Year",
xlab = "Year",
ylab = "Individual sampled fish each year")
#Used for help creating bar chart: https://www.storybench.org/create-barplot-r/
library(dplyr)
# Leser av CSV filen
herring_bar_raw_data <- read.csv(file = "HerringData.csv")
#names(Herring_bar_graph)
#En tibble 6x2 som viser hvor mange datapunkter per år
herring_bar_clean_data <- herring_bar_raw_data |>
mutate(
year = as.numeric(year),
id = as.numeric(id)
) |>
select(id,year) |>
group_by(year) |>
summarise(total_fish_caught = n())
# --------------------------- BAR GRAPH ---------------------------
#$ Extract or Replace Parts of an Object -- Operators acting on vectors, matrices, arrays and lists to extract or replace parts.
#From max/min total_fish_caught command <- 16518 / 648 individual fish
samples <- herring_bar_clean_data$total_fish_caught
year <- herring_bar_clean_data$year
barplot(samples,                # height of the bar chart
names.arg = year,      # labels for the x-axis
ylim = c(500, 17000),
las = 2,                # labes of Axis Style
cex.names = 0.6,        # Expansion factor of labels
col = "steelblue",
main = "Number of Herring Data Points per Year",
xlab = "Year",
ylab = "Individual sampled fish each year")
#tried to implement fig.width into {r} without any apparent improvement
#Problem: Years on the x-axis is unreadable. Pair close by years to show trend?
library(dplyr)
# Leser av CSV filen
herring_bar_raw_data <- read.csv(file = "HerringData.csv")
#names(Herring_bar_graph)
#En tibble 6x2 som viser hvor mange datapunkter per år
herring_bar_clean_data <- herring_bar_raw_data |>
mutate(
year = as.numeric(year),
id = as.numeric(id)
) |>
select(id,year) |>
group_by(year) |>
summarise(total_fish_caught = n())
# --------------------------- LOGARITHMIC BAR GRAPH ---------------------------
library(ggplot2)
ggplot(herring_bar_clean_data, aes(x = factor(year), y = total_fish_caught)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_sqrt() +  # Tried scale_y_sqrt and scale_y_log10
labs(
title = "Number of Herring Data Points per Year",
x = "Year",
y = "total_fish_caughtuency (log scale)"
) +
theme_minimal()
library(dplyr)
catch_1935_2019 <- herring_bar_clean_data |>
filter(year >= 1935, year <= 2019) |>
summarise(
total_catch = sum(total_fish_caught, na.rm = TRUE),
n_year = n()
)
catch_1935_2019
#| message: false
#| warning: false
#Used for help creating bar chart: https://www.storybench.org/create-barplot-r/
library(dplyr)
# Leser av CSV filen
herring_bar_raw_data <- read.csv(file = "HerringData.csv")
#names(Herring_bar_graph)
#En tibble 6x2 som viser hvor mange datapunkter per år
herring_bar_clean_data <- herring_bar_raw_data |>
mutate(
year = as.numeric(year),
id = as.numeric(id)
) |>
select(id,year) |>
group_by(year) |>
summarise(total_fish_caught = n())
# --------------------------- BAR GRAPH ---------------------------
#$ Extract or Replace Parts of an Object -- Operators acting on vectors, matrices, arrays and lists to extract or replace parts.
#From max/min total_fish_caught command <- 16518 / 648 individual fish
samples <- herring_bar_clean_data$total_fish_caught
year <- herring_bar_clean_data$year
barplot(samples,                # height of the bar chart
names.arg = year,      # labels for the x-axis
ylim = c(500, 17000),
las = 2,                # labes of Axis Style
cex.names = 0.6,        # Expansion factor of labels
col = "steelblue",
main = "Number of Herring Data Points per Year",
xlab = "Year",
ylab = "Individual sampled fish each year")
#| message: false
#| warning: false
#tried to implement fig.width into {r} without any apparent improvement
#Problem: Years on the x-axis is unreadable. Pair close by years to show trend?
library(dplyr)
# Leser av CSV filen
herring_bar_raw_data <- read.csv(file = "HerringData.csv")
#names(Herring_bar_graph)
#En tibble 6x2 som viser hvor mange datapunkter per år
herring_bar_clean_data <- herring_bar_raw_data |>
mutate(
year = as.numeric(year),
id = as.numeric(id)
) |>
select(id,year) |>
group_by(year) |>
summarise(total_fish_caught = n())
# --------------------------- LOGARITHMIC BAR GRAPH ---------------------------
library(ggplot2)
ggplot(herring_bar_clean_data, aes(x = factor(year), y = total_fish_caught)) +
geom_bar(stat = "identity", fill = "steelblue") +
scale_y_sqrt() +  # Tried scale_y_sqrt and scale_y_log10
labs(
title = "Number of Herring Data Points per Year",
x = "Year",
y = "total_fish_caughtuency (log scale)"
) +
theme_minimal()
#| message: false
#| warning: false
#| echo: false
library(dplyr)
catch_1935_2019 <- herring_bar_clean_data |>
filter(year >= 1935, year <= 2019) |>
summarise(
total_catch = sum(total_fish_caught, na.rm = TRUE),
n_year = n()
)
catch_1935_2019
herring_data_raw <- read.csv(
here("HerringData.csv"))
#| message: false
#| warning: false
#| echo: false
#install.packages()
#| message: false
#| warning: false
library(here)
herring_data_raw <- read.csv(
here("HerringData.csv"))
head(herring_data_raw)
herring_data <- herring_data_raw |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
)
#| message: false
#| warning: false
library(here)
library(dplyr)
herring_data_raw <- read.csv(
here("HerringData.csv"))
head(herring_data_raw)
herring_data <- herring_data_raw |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
)
head(herring_data)
#| message: false
#| warning: false
library(here)
library(dplyr)
herring_data_raw <- read.csv(
here("HerringData.csv") |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)))
#| message: false
#| warning: false
library(here)
library(dplyr)
herring_data_raw <- read.csv(
here("HerringData.csv"))
p <- herring_data_raw |>
mutate(
.data,
.by = NULL,
.keep = c("length"),
.before = NULL,
.after = NULL
)
#| message: false
#| warning: false
library(here)
library(dplyr)
herring_data_raw <- read.csv(
here("HerringData.csv"))
p <- herring_data_raw |>
mutate(
.data,
.by = lenght,
.keep = c("none"),
.before = NULL,
.after = NULL
)
#| message: false
#| warning: false
library(here)
library(dplyr)
herring_data_raw <- read.csv(
here("HerringData.csv"))
p <- herring_data_raw |>
mutate(
.data,
.by = length,
.keep = c("none"),
.before = NULL,
.after = NULL
)
#| message: false
#| warning: false
library(here)
library(dplyr)
herring_data_raw <- read.csv(
here("HerringData.csv"))
p <- herring_data_raw |>
select(year, length)
head(p)
#| message: false
#| warning: false
library(here)
library(dplyr)
library(ggplot2)
herring_data_raw <- read.csv(
here("HerringData.csv"))
p <- herring_data_raw |>
select(year, length)
head(p)
p <- p + geom_boxplot()
#| message: false
#| warning: false
library(here)
library(dplyr)
library(ggplot2)
herring_data_raw <- read.csv(
here("HerringData.csv"))
herring_clean <- herring_data |>
mutate(
year = as.numeric(year),
length = as.numeric(length)
)
p <- herring_data_clean |>
select(year, length)
