{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        2
    ],
    "data": [
        "\nR version 4.5.1 (2025-06-13 ucrt) -- \"Great Square Root\"\nCopyright (C) 2025 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for ",
        "some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n[1] \"LC_COLLATE=Norwegian_Norway.utf8;LC_CTYPE=Norwegian_Norway.utf8;LC_MONETARY=Norwegian_Norway.utf8;LC_NUMERIC=C;LC_TIME=Norwegian_Norway.utf8\"\n",
        "> ",
        "#| message: false",
        "> ",
        "#| warning: false",
        "> ",
        "library(dplyr)",
        "> ",
        "library(tidyr)",
        "> ",
        "> ",
        "#ifelse statement",
        "> ",
        "#https://www.youtube.com/watch?v=zose3lQAN7o",
        "> ",
        "#https://stackoverflow.com/questions/66173100/how-to-use-ifelse-statements-in-r",
        "> ",
        "> ",
        "> ",
        "herring_data <- readRDS(\"herring_data.rds\")",
        "> ",
        "> ",
        "sex_year_wide <- herring_data |>",
        "+ ",
        "  mutate(sex_chr = ifelse(is.na(sex), \"NA\", as.character(sex))) |> # if there is no sex listed, return \"NA\", else return the data as a character",
        "+ ",
        "  group_by(year, sex_chr) |>",
        "+ ",
        "  summarise(n = n(), .groups = \"drop\") |> # teller antall rader 1,2,4 og NA forekommer",
        "+ ",
        "  pivot_wider(names_from = sex_chr, values_from = n, values_fill = 0) # Fyller rader som ellers returnerer NA med 0 slik at man summere over radene senere",
        "> ",
        "> ",
        "show(sex_year_wide)",
        "> ",
        "#| label: Amount of males and females per decade",
        "> ",
        "#| message: false",
        "> ",
        "#| warning: false",
        "> ",
        "> ",
        "library(dplyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "> ",
        "herring_data <- readRDS(\"herring_data.rds\")",
        "> ",
        "> ",
        "# Teller antall individer per tiår og fordelt på kjønn",
        "> ",
        "herring_counts <- herring_data |>",
        "+ ",
        "  filter(sex %in% c(1, 2)) |>   # beholder kun hankjønn og hunkjønn",
        "+ ",
        "  mutate(",
        "+ ",
        "    decade = cut(",
        "+ ",
        "      year,",
        "+ ",
        "      breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),",
        "+ ",
        "      labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",",
        "+ ",
        "                 \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),",
        "+ ",
        "      include.lowest = TRUE",
        "+ ",
        "    ),",
        "+ ",
        "    sex = recode_factor(sex, `1` = \"Male\", `2` = \"Female\") # 1 = Male, 2 = Female",
        "+ ",
        "  ) |>",
        "+ ",
        "  count(decade, sex)   # teller antall rader for hver kombinasjon",
        "> ",
        "> ",
        "# Plot to linjer – en for menn og en for kvinner",
        "> ",
        "ggplot(herring_counts, aes(x = decade, y = n, color = sex, group = sex)) +",
        "+ ",
        "  geom_line(linewidth = 1) +",
        "+ ",
        "  geom_point(size = 2) +",
        "+ ",
        "  scale_color_manual(",
        "+ ",
        "    values = c(\"Male\" = \"steelblue\", \"Female\" = \"pink1\")) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Amount of males and females per decade\",",
        "+ ",
        "    x = \"Decade\",",
        "+ ",
        "    y = \"Number of individuals\",",
        "+ ",
        "    color = \"Gender\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_y_continuous(n.breaks = 20) + #antall streker på y-akse",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  theme(axis.text.x = element_text(angle = 45), hjust = 1.5)",
        "> ",
        "#| label: Variation in Herring Age across Timeperiode (Decade)",
        "> ",
        "#| message: false",
        "> ",
        "#| warning: false",
        "> ",
        "> ",
        "library(dplyr)",
        "> ",
        "library(sf)",
        "> ",
        "#| label: Variation in Herring Age across Timeperiode (Decade)",
        "> ",
        "#| message: false",
        "> ",
        "#| warning: false",
        "> ",
        "> ",
        "library(dplyr)",
        "> ",
        "library(sf)",
        "> ",
        "library(tidyverse)",
        "> ",
        "> ",
        "herring_data <- readRDS(\"herring_data.rds\")",
        "> ",
        "> ",
        "herring_decades_age <- herring_data |> ",
        "+ ",
        "  mutate(decade = cut(",
        "+ ",
        "    year,",
        "+ ",
        "    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),",
        "+ ",
        "    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",",
        "+ ",
        "               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),",
        "+ ",
        "    include.lowest = TRUE,  # include boundary years",
        "+ ",
        "    right = TRUE    #intervales with form (a,b])",
        "+ ",
        "  ))",
        "> ",
        "> ",
        "ggplot(herring_decades_age, aes(x = decade, y = age)) +",
        "+ ",
        "  geom_boxplot(fill = \"lightgrey\", alpha = 0.6) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Variation in Herring Length by Timeperiode (Decade)\",",
        "+ ",
        "    x = \"Decade\",",
        "+ ",
        "    y = \"Age (years)\"",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_y_continuous(n.breaks = 13) + #antall streker på y-akse",
        "+ ",
        "  theme_minimal()",
        "> ",
        "View(herring_data)",
        "> ",
        "library(dplyr)",
        "> ",
        "> ",
        "na_check <- herring_data |>",
        "+ ",
        "  summarise(across(everything(), ~ any(is.na(.)))) |>",
        "+ ",
        "  pivot_longer(cols = everything(),",
        "+ ",
        "               names_to = \"column\",",
        "+ ",
        "               values_to = \"has_NA\") |>",
        "+ ",
        "  mutate(message = ifelse(has_NA,",
        "+ ",
        "                          \"Yes, there is NA values in this column\",",
        "+ ",
        "                          \"No, no NA values in this column\"))",
        "> ",
        "> ",
        "na_check",
        "> ",
        "\u001BG3;Restarting R session...\u001Bg",
        "[1] \"LC_COLLATE=Norwegian_Norway.utf8;LC_CTYPE=Norwegian_Norway.utf8;LC_MONETARY=Norwegian_Norway.utf8;LC_NUMERIC=C;LC_TIME=Norwegian_Norway.utf8\"\n",
        "> ",
        "#| label: Completed map",
        "> ",
        "#| message: false",
        "> ",
        "#| warning: false",
        "> ",
        "> ",
        "library(readr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(sf)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(rnaturalearth)",
        "> ",
        "library(rnaturalearthdata)",
        "> ",
        "> ",
        "# Definer yttergrenser",
        "> ",
        "lon_min <- -21.9",
        "> ",
        "lon_max <- 49.9",
        "> ",
        "lat_min <- 56.9",
        "> ",
        "lat_max <- 77.1",
        "> ",
        "> ",
        "# Lager polygoner av datapunkt som jeg ønsker å fjerne",
        "> ",
        "poly_norway_russia <- st_polygon(list(rbind(",
        "+ ",
        "  c(11.4, 57.6),",
        "+ ",
        "  c(11.4, 62.8), ",
        "+ ",
        "  c(50.0, 62.8),  ",
        "+ ",
        "  c(50.0, 57.6),  ",
        "+ ",
        "  c(11.4, 57.6)   ",
        "+ ",
        ")))",
        "> ",
        "> ",
        "poly_northern_norway <- st_polygon(list(rbind(",
        "+ ",
        "  c(23.1, 68.6),",
        "+ ",
        "  c(23.1, 68.0),",
        "+ ",
        "  c(24.7, 68.0),",
        "+ ",
        "  c(24.7, 68.6),",
        "+ ",
        "  c(23.1, 68.6)",
        "+ ",
        "  ",
        "+ ",
        ")))",
        "> ",
        "> ",
        "unwanted_datapoints <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)",
        "> ",
        "> ",
        "# Lesing av csv fil med konverting til sf objekt",
        "> ",
        "herring_sf <- read_csv(\"HerringData.csv\") |>",
        "+ ",
        "  mutate(",
        "+ ",
        "    across(everything(), as.numeric)",
        "+ ",
        "  ) |>",
        "+ ",
        "  filter(",
        "+ ",
        "    !is.na(lat) & !is.na(lon),",
        "+ ",
        "    lon >= lon_min & lon <= lon_max,",
        "+ ",
        "    lat >= lat_min & lat <= lat_max",
        "+ ",
        "  ) |> ",
        "+ ",
        "  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)",
        "> ",
        "> ",
        "# Kutter ut datapunkt i polygonene fra datasettet",
        "> ",
        "inside_unwanted_datapoints <- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)",
        "> ",
        "herring_sf <- herring_sf[!apply(inside_unwanted_datapoints, 1, any), ]",
        "> ",
        "> ",
        "# Bakgrunnskart",
        "> ",
        "europe <- ne_countries(continent = \"Europe\", returnclass = \"sf\")",
        "> ",
        "> ",
        "# Plot",
        "> ",
        "ggplot() +",
        "+ ",
        "  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +",
        "+ ",
        "  geom_sf(data = herring_sf, color = \"red\", alpha = 0.7, size = 1) +",
        "+ ",
        "  coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +",
        "+ ",
        "  theme_minimal() +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Spatial location of Herring datapoints\",",
        "+ ",
        "    x = \"Longitude\",",
        "+ ",
        "    y = \"Latitude\"",
        "+ ",
        "  )",
        "> ",
        "#| label: Variation in Herring Length across Timeperiode (Decade)",
        "> ",
        "#| message: false",
        "> ",
        "#| warning: false",
        "> ",
        "> ",
        "library(dplyr)",
        "> ",
        "library(sf)",
        "> ",
        "library(tidyverse)",
        "> ",
        "> ",
        "herring_data <- readRDS(\"herring_data.rds\")",
        "> ",
        "> ",
        "herring_grouped_decades <- herring_data |> ",
        "+ ",
        "  mutate(decade = cut(",
        "+ ",
        "    year,",
        "+ ",
        "    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),",
        "+ ",
        "    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",",
        "+ ",
        "               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),",
        "+ ",
        "    include.lowest = TRUE,  # inkluderer grenseåret 1935",
        "+ ",
        "    right = TRUE    #sørger for interval på formen (a,b])",
        "+ ",
        "  ))",
        "> ",
        "> ",
        "ggplot(herring_grouped_decades, aes(x = decade, y = length)) +",
        "+ ",
        "  geom_boxplot(fill = \"skyblue\", alpha = 0.6) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Variation in Herring Length across Timeperiode (Decade)\",",
        "+ ",
        "    x = \"Decade\",",
        "+ ",
        "    y = \"Length (cm)\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal()",
        "> ",
        "View(herring_grouped_decades)",
        "> ",
        "View(herring_sf)",
        "> ",
        "View(herring_data)",
        "\u001BG3;Restarting R session...\u001Bg",
        "[1] \"LC_COLLATE=Norwegian_Norway.utf8;LC_CTYPE=Norwegian_Norway.utf8;LC_MONETARY=Norwegian_Norway.utf8;LC_NUMERIC=C;LC_TIME=Norwegian_Norway.utf8\"\n",
        "> ",
        "#| label: Bakgrunnskode",
        "> ",
        "#| message: false",
        "> ",
        "#| warning: false",
        "> ",
        "#| echo: false",
        "> ",
        "> ",
        "library(readr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(sf)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(rnaturalearth)",
        "> ",
        "library(rnaturalearthdata)",
        "> ",
        "> ",
        "# Definer yttergrenser",
        "> ",
        "lon_min <- -21.9",
        "> ",
        "lon_max <- 49.9",
        "> ",
        "lat_min <- 56.9",
        "> ",
        "lat_max <- 77.1",
        "> ",
        "> ",
        "# Lager polygoner av datapunkt som jeg ønsker å fjerne",
        "> ",
        "poly_norway_russia <- st_polygon(list(rbind(",
        "+ ",
        "  c(11.4, 57.6),",
        "+ ",
        "  c(11.4, 62.8), ",
        "+ ",
        "  c(50.0, 62.8),  ",
        "+ ",
        "  c(50.0, 57.6),  ",
        "+ ",
        "  c(11.4, 57.6)   ",
        "+ ",
        ")))",
        "> ",
        "> ",
        "poly_northern_norway <- st_polygon(list(rbind(",
        "+ ",
        "  c(23.1, 68.6),",
        "+ ",
        "  c(23.1, 68.0),",
        "+ ",
        "  c(24.7, 68.0),",
        "+ ",
        "  c(24.7, 68.6),",
        "+ ",
        "  c(23.1, 68.6)",
        "+ ",
        "  ",
        "+ ",
        ")))",
        "> ",
        "> ",
        "unwanted_datapoints <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)",
        "> ",
        "> ",
        "herring_data <- read_csv(\"HerringData.csv\") |>",
        "+ ",
        "  mutate(across(everything(), as.numeric)",
        "+ ",
        "  ) |>",
        "+ ",
        "  filter(",
        "+ ",
        "    !is.na(lat) & !is.na(lon),",
        "+ ",
        "    lon >= lon_min & lon <= lon_max,",
        "+ ",
        "    lat >= lat_min & lat <= lat_max",
        "+ ",
        "  ) ",
        "> ",
        "> ",
        "# omformer fra df til sf",
        "> ",
        "herring_sf <- st_as_sf(herring_data, coords = c(\"lon\", \"lat\"), crs = 4326)",
        "> ",
        "> ",
        "# Finner og kutter ut datapunkt fra polygonene i det rå datasettet",
        "> ",
        "inside_unwanted_datapoints <- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)",
        "> ",
        "herring_data <- herring_data[!apply(inside_unwanted_datapoints, 1, any), ]",
        "> ",
        "> ",
        "# Lagrer ferdig behandlet kode",
        "> ",
        "saveRDS(herring_data, file = \"herring_data.rds\")",
        "> ",
        "\u001BG3;Restarting R session...\u001Bg"
    ]
}