lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# --- 3. Remove points inside cutouts right away ---
inside_cutouts <- st_intersects(herring_sf, cutouts, sparse = FALSE)
herring_sf <- herring_sf[!apply(inside_cutouts, 1, any), ]
# Kart
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_sf(data = herring_sf, color = "red", alpha = 0.7, size = 1) + +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Spatial location of Herring datapoints",
subtitle = "Red = Land, Blue = Ocean",
x = "Longitude",
y = "Latitude"
)
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Define bounding box (to keep only the general study area)
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
cutouts <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)
# --- 2. Read CSV and convert directly to sf -------
herring_sf <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# --- 3. Remove points inside cutouts right away ---
inside_cutouts <- st_intersects(herring_sf, cutouts, sparse = FALSE)
herring_sf <- herring_sf[!apply(inside_cutouts, 1, any), ]
# Kart
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_sf(data = herring_sf, color = "red", alpha = 0.7, size = 1) + +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Spatial location of Herring datapoints",
subtitle = "Red = Land, Blue = Ocean",
x = "Longitude",
y = "Latitude"
)
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Define bounding box (to keep only the general study area)
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
cutouts <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)
# --- 2. Read CSV and convert directly to sf -------
herring_sf <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# --- 3. Remove points inside cutouts right away ---
inside_cutouts <- st_intersects(herring_sf, cutouts, sparse = FALSE)
herring_sf <- herring_sf[!apply(inside_cutouts, 1, any), ]
# Bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
#plot
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_sf(data = herring_sf, color = "red", alpha = 0.7, size = 1) + +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Spatial location of Herring datapoints",
subtitle = "Red = Land, Blue = Ocean",
x = "Longitude",
y = "Latitude"
)
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Define bounding box (to keep only the general study area)
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
cutouts <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)
# --- 2. Read CSV and convert directly to sf -------
herring_sf <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# --- 3. Remove points inside cutouts right away ---
inside_cutouts <- st_intersects(herring_sf, cutouts, sparse = FALSE)
herring_sf <- herring_sf[!apply(inside_cutouts, 1, any), ]
# Bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
#plot
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_sf(data = herring_sf, color = "red", alpha = 0.7, size = 1) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Spatial location of Herring datapoints",
subtitle = "Red = Land, Blue = Ocean",
x = "Longitude",
y = "Latitude"
)
#| message: false
#| warning: false
#| echo: false
#install.packages("prettymapr")
#install.packages("ggspatial")
#install.packages("rnaturalearth")
#install.packages("rnaturalearthdata")
#install.packages("maps")
#| message: false
#| warning: false
library(ggplot2)
library(dplyr)
library(maps)
library(stringr)
library(here)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggspatial)
library(prettymapr)
herring_data_raw <- read.csv(
here("HerringData.csv")) #currently stored as chr
herring_data_sorted <- herring_data_raw |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
)
herring_data_clean <- herring_data_sorted[!is.na(herring_data_sorted$lon) & !is.na(herring_data_sorted$lat), ]
herring_data_ready <- st_as_sf(herring_data_clean, coords = c("lon", "lat"), crs = 4326)
# with rnaturalearth
europe <- ne_countries(continent = "Europe", returnclass = "sf")
ggplot() +
geom_sf(data = europe) +
geom_sf(data = herring_data_ready, colour = "red") +
#coord_sf(xlim = c(0, 30), ylim = c(55, 74))
coord_sf(xlim = c(-21, 50), ylim = c(5, 81))
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Last data
herring_data <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
)
# Bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Omvender df -> sf
herring_sf <- st_as_sf(herring_data, coords = c("lon", "lat"), crs = 4326)
# Slår av s2 for å unngå feil i kryssning mellom land/hav: https://r.geocompx.org/spatial-class section 2.2.9
sf_use_s2(FALSE)
# Sjekker om hvert punkt av herring_sf krysser _minst_ et land i europa. Krysser det _minst_ et land returneres TRUE
# info om spare = FALSE: https://r-spatial.github.io/sf/reference/geos_binary_pred.html
on_land <- rowSums(st_intersects(herring_sf, europe, sparse = FALSE)) > 0
# Filtrer vekk punkter som ligger på land
herring_sf_ocean <- herring_sf[!on_land, ]
# Lagrer ferdig behandlet kode
save(herring_sf_ocean, file = "herring_data_clean.rda")
# Kart
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_sf(data = herring_sf, color = "red", alpha = 0.7, size = 1) +
geom_sf(data = herring_sf_ocean, color = "blue", alpha = 0.7, size = 1) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Spatial location of Herring datapoints",
subtitle = "Red = Land, Blue = Ocean",
x = "Longitude",
y = "Latitude"
)
#| label: Markering av fjernede datapunkter
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lesing av csv fil
herring_data <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
)
# Omformer df -> sf
herring_sf <- st_as_sf(herring_data, coords = c("lon", "lat"), crs = 4326)
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
unwanted_datapoints <- st_sfc(poly_norway_russia, poly_northern_norway, crs = 4326)
# Kutter ut datapunkt i polygonene fra datasettet
inside_unwanted_datapoints <- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)
herring_sf_ocean <- herring_sf[!apply(inside_unwanted_datapoints, 1, any), ]
# Bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plot
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_sf(data = herring_sf, color = "red", alpha = 0.7, size = 1) +
geom_sf(data = unwanted_datapoints, fill = NA, color = "black", linetype = "dashed") +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Spatial location of Herring datapoints",
subtitle = "Red = Land, Blue = Ocean",
x = "Longitude",
y = "Latitude"
)
#| label: Fullstending kart
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
unwanted_datapoints <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)
# Lesing av csv fil med konverting til sf objekt
herring_sf <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Kutter ut datapunkt i polygonene fra datasettet
inside_unwanted_datapoints <- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)
herring_sf <- herring_sf[!apply(inside_unwanted_datapoints, 1, any), ]
# Bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plot
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_sf(data = herring_sf, color = "red", alpha = 0.7, size = 1) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Spatial location of Herring datapoints",
x = "Longitude",
y = "Latitude"
)
quarto preview Begrensninger_av_datasett.qmd
quarto render Begrensninger_av_datasett.qmd
quarto render Begrensninger_av_datasett
quarto render Begrensninger av datasett.qmd
render Begrensninger_av_datasett.qmd
#| label: Bakgunnskode
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
unwanted_datapoints <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)
# Lesing av csv fil med konverting til sf objekt
herring_data <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Kutter ut datapunkt i polygonene fra datasettet
inside_unwanted_datapoints <- st_intersects(herring_data, unwanted_datapoints, sparse = FALSE)
herring_data <- herring_data[!apply(inside_unwanted_datapoints, 1, any), ]
# Lagrer ferdig behandlet kode
save(herring_data, file = "herring_data_clean.rda")
#| label: Variation in Herring Length by Timeperiode (Decade)
#| message: false
#| warning: false
herring_grouped_decades <- herring_data |>
mutate(decade = cut(
year,
breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),
labels = c("1935-1945", "1946-1955", "1956-1965", "1966-1975", "1976-1985", "1986-1995", "1996-2005", "2006-2015", "2016-2019"),
include.lowest = TRUE,  # include boundary years
right = TRUE    #intervales with form (a,b])
))
load("~/Master/herring_data_clean.rda")
View(herring_data)
#| label: Bakgunnskode
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
unwanted_datapoints <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)
# Lesing av csv fil med konverting til sf objekt
herring_data <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
)
# Kutter ut datapunkt i polygonene fra datasettet
inside_unwanted_datapoints <- st_intersects(herring_data, unwanted_datapoints, sparse = FALSE)
